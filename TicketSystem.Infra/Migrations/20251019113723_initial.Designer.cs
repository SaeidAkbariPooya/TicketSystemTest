// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketSystem.Infra.Context;

#nullable disable

namespace TicketSystem.Infra.Migrations
{
    [DbContext(typeof(TicketSystemDbContext))]
    [Migration("20251019113723_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketSystem.Core.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedToUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TicketSystem.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6398c883-4bc7-4e6f-8078-ba313b1ff875"),
                            CreatedAt = new DateTime(2025, 10, 19, 11, 37, 21, 672, DateTimeKind.Utc).AddTicks(3390),
                            Email = "admin@yahoo.com",
                            FullName = "admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEIqea09aiuMaJnG7kfLBs8hTVikLFo1OCwbwd0KBdkIx2AYoIllQLWe4nmBeRmUQSw==",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("56eb9e27-90ce-4094-ad71-9f0432cccfe1"),
                            CreatedAt = new DateTime(2025, 10, 19, 11, 37, 21, 796, DateTimeKind.Utc).AddTicks(6202),
                            Email = "user@yahoo.com",
                            FullName = "user",
                            PasswordHash = "AQAAAAIAAYagAAAAEN237ffday1tXRvdzCiw0y9JzdPU+EIttctXInjq1pj5rWex/R1Bs2W5l/y7toblCQ==",
                            Role = 0
                        });
                });

            modelBuilder.Entity("TicketSystem.Core.Entities.Ticket", b =>
                {
                    b.HasOne("TicketSystem.Core.Entities.User", "AssignedToUser")
                        .WithMany("AssignedTickets")
                        .HasForeignKey("AssignedToUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TicketSystem.Core.Entities.User", "CreatedByUser")
                        .WithMany("CreatedTickets")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssignedToUser");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("TicketSystem.Core.Entities.User", b =>
                {
                    b.Navigation("AssignedTickets");

                    b.Navigation("CreatedTickets");
                });
#pragma warning restore 612, 618
        }
    }
}
